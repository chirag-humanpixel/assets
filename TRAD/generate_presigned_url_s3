Description of Code: Generate presigned URL from s3
Tags: NodeJS
URL/Zip file: 
const getPreSignedUrl = async ({ filePath, getCloudFrontUrl }) => {
  return new Promise(async (resolve, reject) => {
    try {
      if (!filePath) return resolve();
      if (config.staticServing.isCloudFrontEnabled && getCloudFrontUrl) {
        cloudFrontSigningParams['expireTime'] =
          Date.now() + config.staticServing.expiryTimeInMinutes * 60 * 1000;
        let signedUrl = cloudFrontSign.getSignedUrl(
          config.staticServing.cloudFrontUrl + filePath,
          cloudFrontSigningParams,
        );
        return resolve(signedUrl);
      } else {
        let s3SigningParams = {
          Bucket: config.staticServing.bucketName,
          Key: filePath,
          Expires: config.staticServing.expiryTimeInMinutes * 60 * 1000,
        };
        s3.getSignedUrl('getObject', s3SigningParams, (err, signedUrl) => {
          if (err) {
            return reject(err);
          }
          return resolve(signedUrl);
        });
      }
    } catch (e) {
      Logger.log.error('Error in getting pre-signed URL', e.message || e);
      return reject(e);
    }
  });
};
